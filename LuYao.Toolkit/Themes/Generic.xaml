<!--
    This code was generated by a tool.

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:convs="clr-namespace:LuYao.Toolkit.Converters" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:local="clr-namespace:LuYao.Toolkit.Controls" xmlns:rdo="clr-namespace:LuYao.Toolkit.Tabs.Rdp.Controls" xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:editor="http://icsharpcode.net/sharpdevelop/avalonedit">
	<convs:EnumToDescriptionConverter x:Key="Enum2DescriptionConverter" />
	<convs:EnumToBooleanConverter x:Key="EnumBooleanConverter" />
	<convs:FunctionBackgroundConverter x:Key="FunctionBackgroundConverter" />
	<convs:DateTimeToRelativeConverter x:Key="DateTimeToRelativeConverter" />
	<convs:ByteCountToDisplaySizeConverter x:Key="ByteCountToDisplaySizeConverter" />
	<convs:PathToIconConverter x:Key="PathToIconConverter" />
	<convs:TruncateStringConverter x:Key="TruncateStringConverter" />
	<convs:EnumToVisibilityConverter x:Key="Enum2VisibilityConverter" />
	<convs:LanguageCodeToNameConverter x:Key="LanguageCodeToNameConverter" />
	<Style TargetType="{x:Type local:FormItemContainer}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:FormItemContainer}">
					<DockPanel>
						<TextBlock x:Name="PrefixTextBlock" Margin="3" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Prefix}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PrefixWidth}" VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment}" TextAlignment="Right" DockPanel.Dock="Left" />
						<ContentPresenter Margin="3" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type local:TextBlockWithIconBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:TextBlockWithIconBox}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<StackPanel Orientation="Horizontal">
							<Image Source="{TemplateBinding Icon}" VerticalAlignment="Center" />
							<TextBlock Text="{TemplateBinding Text}" VerticalAlignment="Center" Margin="3,0" />
						</StackPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="CanUserResizeColumns" Value="False" />
		<Setter Property="CanUserSortColumns" Value="False" />
		<Setter Property="IsReadOnly" Value="True" />
		<Setter Property="SelectionMode" Value="Single" />
	</Style>
	<Style TargetType="{x:Type rdo:RdpTabItemHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type rdo:RdpTabItemHeader}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border.ContextMenu>
							<ContextMenu>
								<MenuItem Header="链接" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ConnectCommand}">
									<MenuItem.Icon>
										<icon:PackIconMaterial Width="12" Height="12" Kind="Connection" Foreground="{DynamicResource PrimaryBrush}" />
									</MenuItem.Icon>
									<MenuItem.Style>
										<Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemBaseStyle}">
											<Setter Property="Visibility" Value="Visible" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Status}" Value="Connecting">
													<Setter Property="Visibility" Value="Collapsed" />
												</DataTrigger>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Status}" Value="Connected">
													<Setter Property="Visibility" Value="Collapsed" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</MenuItem.Style>
								</MenuItem>
								<MenuItem Header="断开" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=DisconnectCommand}">
									<MenuItem.Icon>
										<icon:PackIconMaterial Width="12" Height="12" Kind="LanDisconnect" Foreground="{DynamicResource InfoBrush}" />
									</MenuItem.Icon>
									<MenuItem.Style>
										<Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemBaseStyle}">
											<Setter Property="Visibility" Value="Collapsed" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Status}" Value="Connected">
													<Setter Property="Visibility" Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</MenuItem.Style>
								</MenuItem>
								<MenuItem Header="关闭" Command="hc:ControlCommands.Close">
									<MenuItem.Icon>
										<icon:PackIconMaterial Kind="Close" Width="12" Height="12" Foreground="{DynamicResource DangerBrush}" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</Border.ContextMenu>
						<DockPanel Background="Transparent">
							<icon:PackIconMaterial Width="12" Height="12" DockPanel.Dock="Left" VerticalAlignment="Center">
								<icon:PackIconMaterial.Style>
									<Style TargetType="icon:PackIconMaterial">
										<Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
										<Setter Property="Kind" Value="LanDisconnect" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Status}" Value="Connecting">
												<Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
												<Setter Property="Kind" Value="SatelliteUplink" />
											</DataTrigger>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Status}" Value="Connected">
												<Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
												<Setter Property="Kind" Value="LanConnect" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</icon:PackIconMaterial.Style>
							</icon:PackIconMaterial>
							<TextBlock Margin="5,0" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Connection.Name}" VerticalAlignment="Center" />
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type editor:TextEditor}">
		<Setter Property="FontFamily" Value="pack://application:,,,/LuYao.Toolkit;component/Resources/#JetBrains Mono" />
		<Setter Property="ShowLineNumbers" Value="True" />
		<Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Header="剪切" Command="{x:Static ApplicationCommands.Cut}" />
					<MenuItem Header="复制" Command="{x:Static ApplicationCommands.Copy}" />
					<MenuItem Header="粘贴" Command="{x:Static ApplicationCommands.Paste}" />
					<Separator />
					<MenuItem Header="全选" Command="{x:Static ApplicationCommands.SelectAll}" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DialogWindowBase" TargetType="hc:Window" BasedOn="{StaticResource WindowWin10}">
		<Setter Property="SizeToContent" Value="WidthAndHeight" />
	</Style>
	<Style TargetType="{x:Type local:MasterDetailLayout}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:MasterDetailLayout}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="2" />
								<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinDetailWidth}" MaxWidth="{TemplateBinding MaxDetailWidth}" />
							</Grid.ColumnDefinitions>
							<GridSplitter Grid.Column="1" Background="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
							<ContentPresenter Grid.Column="2" />
							<ContentPresenter ContentSource="Header" Grid.Column="0">
								<ContentPresenter.Style>
									<Style TargetType="ContentPresenter">
										<Setter Property="Grid.ColumnSpan" Value="3" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MasterDetailLayout},Path=IsExpanded}" Value="True">
												<Setter Property="Grid.ColumnSpan" Value="1" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ContentPresenter.Style>
							</ContentPresenter>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>